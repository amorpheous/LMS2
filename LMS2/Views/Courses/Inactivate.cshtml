@model LMS2.Models.Course

@{
    ViewBag.Title = "Inactivate";
}

<h2>Inactivate</h2>

<h3>This course is connected to other entities and cannot be deleted. Du you want to inactivate it?</h3>
<div>
    <h4>Course</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.CourseName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CourseName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UrgentInfo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UrgentInfo)
        </dd>
        <dt>
            #students
        </dt>

        <dd>
            @Model.AttendingStudents.Count()
        </dd>
        <dt>
            #files
        </dt>

        <dd>
            @{int files = 0;
                int cFiles = 0;
                int mFiles = 0;
                int aFiles = 0;
                int SFiles = 0;
                int aCount = 0;}
            @{files += Model.Files.Count();}
            @{cFiles += Model.Files.Count();}
            @if (@Model.Modules != null)
            {
                foreach (var module in Model.Modules)
                {
                    if (module.Files != null)
                    {
                        files += module.Files.Count();
                        mFiles += module.Files.Count();
                    }
                    foreach (var activity in module.Activities)
                    {
                        files += activity.Files.Count();
                        aFiles += activity.Files.Count();
                        aCount++;
                    }
                }
            }
            @if (@Model.AttendingStudents != null)
            {
                foreach (var student in Model.AttendingStudents)
                {
                    if (student.Files != null)
                    {
                        files += student.Files.Count();
                        SFiles += student.Files.Count();
                    }
                }
            }
            <text>@files (Courses: @cFiles, Modules: @mFiles, Activities: @aFiles, Students: @SFiles) </text>

        </dd>



        <dt>
            #modules
        </dt>

        <dd>
            @Model.Modules.Count()
        </dd>
        <dt>
            #activities
        </dt>
        <dd>
            @aCount
        </dd>




    </dl>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Inactivate" class="btn btn-default" /> |
            @Html.ActionLink("Back to List", "Index")
        </div>
    }
</div>
