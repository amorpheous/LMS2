@using PagedList;
@using PagedList.Mvc;

<script src="~/Scripts/jquery-1.7.1.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>
<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />



@model IEnumerable<LMS2.Models.Course>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@Html.ActionLink("Present/Future", "Index", new { id = 0 }) |
@Html.ActionLink("Past", "Index", new { id = 2 }) |
@Html.ActionLink("All", "Index", new { id = 3 })

<p>

    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            Name
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DurationDays)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <th>
            Info
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr class="btn-success">
            <td>
                <b>(C)</b> @Html.DisplayFor(modelItem => item.CourseName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DurationDays)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UrgentInfo)
            </td>


            <td>
                @if (User.IsInRole("Teacher"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) <span>|</span>
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) <span>|</span>
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })<span>|</span>
                    @Html.ActionLink("Add_module", "Create", "Modules", new { CourseId = item.Id }, null)

                }

                @if (User.IsInRole("Student"))
                {
                    @Html.ActionLink("Details", "Details", new { id = item.Id })
                }

            </td>
        </tr>

        foreach (var item2 in item.Modules.OrderBy(x => x.StartDate).ThenBy(x => x.ModuleName))
        {
            <tr class="btn-danger">
                <td>
                    <b>(M)</b> @Html.DisplayFor(modelItem => item2.ModuleName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item2.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item2.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item2.DurationDays)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item2.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item2.ModuleInfo)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", "Modules", new { id = item2.Id }, null) |
                    @Html.ActionLink("Details", "Details", "Modules", new { id = item2.Id }, null) |
                    @Html.ActionLink("Delete", "Delete", "Modules", new { id = item2.Id }, null) |
                    @Html.ActionLink("Add_activity", "Create", "Activities", new { ModuleId = item2.Id }, null)
                </td>

            </tr>
            foreach (var item3 in item2.Activities.OrderBy(x => x.StartDate).ThenBy(x => x.ActivityName))
            {
                <tr class="btn-primary">
                    <td>
                        <b>(A)</b> @Html.DisplayFor(modelItem => item3.ActivityName) (@Html.DisplayFor(modelItem => item3.ActivityType.ActivityTypeName))
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item3.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item3.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item3.DurationDays)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item3.EndDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item3.ActivityInfo)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Activities", new { id = item2.Id }, null) |
                        @Html.ActionLink("Details", "Details", "Activities", new { id = item2.Id }, null) |
                        @Html.ActionLink("Delete", "Delete", "Activities", new { id = item2.Id }, null)
                    </td>

                </tr>



            }

        }

        <tr>
            <td></td>
        </tr>


    }

</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
{
    page
    //searchBy = Request.QueryString["searchBy"]
    //search = Request.QueryString["search"]
    //Display = PagedListDisplayMode.IfNeeded,
    //DisplayItemSliceAndTotal = true
}))

