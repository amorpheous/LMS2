<!DOCTYPE html>

@using PagedList;
@using PagedList.Mvc;

<script src="~/Scripts/jquery-3.3.1.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/LMS2.css" rel="stylesheet" />




@model IEnumerable<LMS2.Models.Course>

<head>


    @{
        ViewBag.Title = "Index";
    }
</head>
<body>

    <h2>Index</h2>

    <p class="usa highlight"></p>

    @Html.ActionLink("Present/Future", "Index", new { id = 0 }) |
    @Html.ActionLink("Past", "Index", new { id = 2 }) |
    @Html.ActionLink("All", "Index", new { id = 3 })

    <p>

        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                Name
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>

            <th>Sub items</th>
            <th>
                @Html.DisplayNameFor(model => model.AttendingStudents)
            </th>
        </tr>

        @foreach (var item in Model)
        {
        <tr class="course">
            <td>
                <b class="btn-success" , style="color: black">C</b> @Html.DisplayFor(modelItem => item.CourseName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Modules.Count) (M)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AttendingStudents.Count)
            </td>

            <td>
<pre>@Html.ActionLink("Edit", "Edit", new { id = item.Id })|@Html.ActionLink("Course page", "StudentCourse", new { id = item.Id })|@Html.ActionLink("Delete", "Delete", new { id = item.Id })
@Html.ActionLink("Add_module", "Create", "Modules", new { CourseId = item.Id }, null)</pre>
            </td>
        </tr>

            foreach (var item2 in item.Modules.OrderBy(x => x.StartDate).ThenBy(x => x.EndDate).ThenBy(x => x.ModuleName))
            {
        <tr class="module">
            <td>
                <b class="btn-danger" , style="color: black">M</b> @Html.DisplayFor(modelItem => item2.ModuleName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item2.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item2.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item2.Activities.Count) (A)
                    </td>
            <td>

<pre>@Html.ActionLink("Edit", "Edit", "Modules", new { id = item2.Id }, null)|@Html.ActionLink("Details", "Details", "Modules", new { id = item2.Id }, null)|@Html.ActionLink("Delete", "Delete", "Modules", new { id = item2.Id }, null)
@Html.ActionLink("Add_activity", "Create", "Activities", new { ModuleId = item2.Id }, null)</pre>
            </td>

        </tr>
                foreach (var item3 in item2.Activities.OrderBy(x => x.StartDate).ThenBy(x => x.ActivityName))
                {
        <tr class="activity">
            <td>
                <b class="btn-primary" style="color: black">A</b> @Html.DisplayFor(modelItem => item3.ActivityName) (@Html.DisplayFor(modelItem => item3.ActivityType.ActivityTypeName))
            </td>
            <td>
                @Html.DisplayFor(modelItem => item3.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item3.EndDate)
            </td>
            <td>-</td>
            <td>
                <pre>@Html.ActionLink("Edit", "Edit", "Activities", new { id = item2.Id }, null)|@Html.ActionLink("Details", "Details", "Activities", new { id = item2.Id }, null)|@Html.ActionLink("Delete", "Delete", "Activities", new { id = item2.Id }, null)</pre>
            </td>

        </tr>



                }

            }

        }

    </table>

    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
    {
        page
        //searchBy = Request.QueryString["searchBy"]
        //search = Request.QueryString["search"]
        //Display = PagedListDisplayMode.IfNeeded,
        //DisplayItemSliceAndTotal = true
    }))


    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/CourseIndex.js"></script>
</body>
