@using PagedList;
@using PagedList.Mvc;

<script src="~/Scripts/jquery-1.7.1.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>
<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />

@model IEnumerable<LMS2.Models.Module>

<form method="get">

    <div class="table-bordered">

        <b>@Html.RadioButton("searchBy", "StartYear", true) <text>Start year</text></b>
        <b>@Html.RadioButton("searchBy", "ModuleName") <text>Module name</text></b>
        <b>@Html.RadioButton("searchBy", "CourseName") <text>Course name</text></b>
        <b>@Html.RadioButton("searchBy", "Duration") <text>Duration</text></b>
        <br />
    </div>

    <div class=table-responsive>
        @Html.TextBox("search")<input type="submit" value="Search" />
    </div>

</form>



@{
    ViewBag.Title = "Module list";
}

<h2>@ViewBag.Title </h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Course.CourseName)

        </th>

        <th>
            @Html.DisplayNameFor(model => model.ModuleName)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.ModuleNameSortParm })

        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.DescriptionSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartDate)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.StartDateSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DurationDays)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.DurationSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ModuleInfo)
            @Html.ActionLink(HttpUtility.HtmlDecode("&#x2195;"), "Index", new { sortOrder = ViewBag.ModuleInfoSortParm })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Course.CourseName) (@Html.DisplayFor(modelItem => item.Course.StartDate))
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModuleName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DurationDays)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModuleInfo)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>        
            <tr>
                @foreach (var item2 in item.Activities.OrderBy(x => x.StartDate).ThenBy(x => x.ActivityName))
        {
            <tr class="alert-danger">
                <td>
                    @Html.DisplayFor(modelItem => item2.ActivityType.ActivityTypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item2.ActivityName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item2.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item2.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item2.DurationDays)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item2.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item2.ActivityInfo)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
}



                </tr>
                }

            </table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
{
    page
    //searchBy = Request.QueryString["searchBy"]
    //search = Request.QueryString["search"]
    //Display = PagedListDisplayMode.IfNeeded,
    //DisplayItemSliceAndTotal = true
}))
